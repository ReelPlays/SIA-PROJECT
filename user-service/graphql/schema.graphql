type User {
  id: ID!
  username: String!
  email: String!
  createdAt: String!
}

type Comment {
  id: ID!
  content: String!
  createdAt: String!
  author: User!
  post: Post!
}

type Post {
  id: ID!
  content: String!
  createdAt: String!
  author: User!
  comments: [Comment!]
}

type AuthPayload {
  token: String!
  user: User!
}

input RegisterInput {
  username: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

type Query {
  me: User
  posts: [Post!]!
}

input CreatePostInput {
  content: String!
}

input CreateCommentInput {
  postId: ID!
  content: String!
}

type Mutation {
  register(input: RegisterInput!): AuthPayload!
  login(input: LoginInput!): AuthPayload!
  createPost(input: CreatePostInput!): Post!
  createComment(input: CreateCommentInput!): Comment!
}