{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KEITH\\\\ActualProject\\\\social-media-frontend\\\\src\\\\components\\\\Auth\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { gql } from '@apollo/client';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOGIN = gql`\n  mutation Login($input: LoginInput!) {\n    login(input: $input) {\n      token\n      user {\n        id\n        username\n      }\n    }\n  }\n`;\nexport default function Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [login] = useMutation(LOGIN);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await login({\n        variables: {\n          input: {\n            email,\n            password\n          }\n        }\n      });\n      localStorage.setItem('token', data.login.token);\n      navigate('/feed');\n    } catch (error) {\n      setError(error.message.includes('invalid credentials') ? 'Invalid email or password' : 'An error occurred during login');\n      console.error('Login error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        color: 'red',\n        marginBottom: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"cySyqmULPO1TYafjLjtZusdnWZw=\", false, function () {\n  return [useMutation, useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useMutation","gql","useNavigate","jsxDEV","_jsxDEV","LOGIN","Login","_s","email","setEmail","password","setPassword","error","setError","login","navigate","handleSubmit","e","preventDefault","data","variables","input","localStorage","setItem","token","message","includes","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/KEITH/ActualProject/social-media-frontend/src/components/Auth/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { gql } from '@apollo/client';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LOGIN = gql`\r\n  mutation Login($input: LoginInput!) {\r\n    login(input: $input) {\r\n      token\r\n      user {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [login] = useMutation(LOGIN);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await login({ \r\n        variables: { \r\n          input: { email, password } \r\n        } \r\n      });\r\n      \r\n      localStorage.setItem('token', data.login.token);\r\n      navigate('/feed');\r\n    } catch (error) {\r\n      setError(error.message.includes('invalid credentials') ? 'Invalid email or password' : 'An error occurred during login');\r\n      console.error('Login error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h2>Login</h2>\r\n      {error && <div className=\"error-message\" style={{ color: 'red', marginBottom: '1rem' }}>{error}</div>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}