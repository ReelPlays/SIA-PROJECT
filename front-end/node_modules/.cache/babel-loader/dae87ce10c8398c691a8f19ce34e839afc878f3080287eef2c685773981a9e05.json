{"ast":null,"code":"import { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { onError } from '@apollo/client/link/error';\n\n// Error handling\nconst errorLink = onError(({\n  graphQLErrors,\n  networkError\n}) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({\n      message,\n      locations,\n      path\n    }) => {\n      console.error(`[GraphQL error]: ${message}`);\n      if (message.includes(\"Unauthorized\")) {\n        // Handle token expiration\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n    });\n  }\n  if (networkError) console.error(`[Network error]: ${networkError}`);\n});\n\n// HTTP connection\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:8081/graphql' // User service endpoint\n});\n\n// Auth middleware\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem('token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(errorLink).concat(httpLink),\n  cache: new InMemoryCache(),\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-and-network'\n    }\n  }\n});\nexport default client;","map":{"version":3,"names":["ApolloClient","InMemoryCache","createHttpLink","setContext","onError","errorLink","graphQLErrors","networkError","forEach","message","locations","path","console","error","includes","localStorage","removeItem","window","location","href","httpLink","uri","authLink","_","headers","token","getItem","authorization","client","link","concat","cache","defaultOptions","watchQuery","fetchPolicy"],"sources":["C:/Users/KEITH/ActualProject/social-media-frontend/src/apolloClient.js"],"sourcesContent":["import { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { onError } from '@apollo/client/link/error';\r\n\r\n// Error handling\r\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\r\n  if (graphQLErrors) {\r\n    graphQLErrors.forEach(({ message, locations, path }) => {\r\n      console.error(`[GraphQL error]: ${message}`);\r\n      if (message.includes(\"Unauthorized\")) {\r\n        // Handle token expiration\r\n        localStorage.removeItem('token');\r\n        window.location.href = '/login';\r\n      }\r\n    });\r\n  }\r\n  if (networkError) console.error(`[Network error]: ${networkError}`);\r\n});\r\n\r\n// HTTP connection\r\nconst httpLink = createHttpLink({\r\n  uri: 'http://localhost:8081/graphql', // User service endpoint\r\n});\r\n\r\n// Auth middleware\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    }\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(errorLink).concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: {\r\n    watchQuery: {\r\n      fetchPolicy: 'cache-and-network',\r\n    },\r\n  }\r\n});\r\n\r\nexport default client;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,EAAEC,cAAc,QAAQ,gBAAgB;AAC5E,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,OAAO,QAAQ,2BAA2B;;AAEnD;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,CAAC;EAAEE,aAAa;EAAEC;AAAa,CAAC,KAAK;EAC7D,IAAID,aAAa,EAAE;IACjBA,aAAa,CAACE,OAAO,CAAC,CAAC;MAAEC,OAAO;MAAEC,SAAS;MAAEC;IAAK,CAAC,KAAK;MACtDC,OAAO,CAACC,KAAK,CAAC,oBAAoBJ,OAAO,EAAE,CAAC;MAC5C,IAAIA,OAAO,CAACK,QAAQ,CAAC,cAAc,CAAC,EAAE;QACpC;QACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;QAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MACjC;IACF,CAAC,CAAC;EACJ;EACA,IAAIZ,YAAY,EAAEK,OAAO,CAACC,KAAK,CAAC,oBAAoBN,YAAY,EAAE,CAAC;AACrE,CAAC,CAAC;;AAEF;AACA,MAAMa,QAAQ,GAAGlB,cAAc,CAAC;EAC9BmB,GAAG,EAAE,+BAA+B,CAAE;AACxC,CAAC,CAAC;;AAEF;AACA,MAAMC,QAAQ,GAAGnB,UAAU,CAAC,CAACoB,CAAC,EAAE;EAAEC;AAAQ,CAAC,KAAK;EAC9C,MAAMC,KAAK,GAAGV,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC;EAC3C,OAAO;IACLF,OAAO,EAAE;MACP,GAAGA,OAAO;MACVG,aAAa,EAAEF,KAAK,GAAG,UAAUA,KAAK,EAAE,GAAG;IAC7C;EACF,CAAC;AACH,CAAC,CAAC;AAEF,MAAMG,MAAM,GAAG,IAAI5B,YAAY,CAAC;EAC9B6B,IAAI,EAAEP,QAAQ,CAACQ,MAAM,CAACzB,SAAS,CAAC,CAACyB,MAAM,CAACV,QAAQ,CAAC;EACjDW,KAAK,EAAE,IAAI9B,aAAa,CAAC,CAAC;EAC1B+B,cAAc,EAAE;IACdC,UAAU,EAAE;MACVC,WAAW,EAAE;IACf;EACF;AACF,CAAC,CAAC;AAEF,eAAeN,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}