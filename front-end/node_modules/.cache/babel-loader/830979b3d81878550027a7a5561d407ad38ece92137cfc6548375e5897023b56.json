{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KEITH\\\\ActualProject\\\\social-media-frontend\\\\src\\\\components\\\\Auth\\\\Register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { REGISTER_USER } from '../../services/auth';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [register] = useMutation(REGISTER_USER);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await register({\n        variables: {\n          input: formData\n        }\n      });\n      localStorage.setItem('token', data.register.token);\n      navigate('/feed');\n    } catch (error) {\n      console.error('Registration error:', error);\n      alert('Registration failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: formData.username,\n        onChange: e => setFormData({\n          ...formData,\n          username: e.target.value\n        }),\n        placeholder: \"Username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: formData.password,\n        onChange: e => setFormData({\n          ...formData,\n          password: e.target.value\n        }),\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"bA0BO4eZkWJwtVnFR0JRZxYLbXs=\", false, function () {\n  return [useMutation, useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useMutation","REGISTER_USER","useNavigate","jsxDEV","_jsxDEV","Register","_s","formData","setFormData","username","email","password","register","navigate","handleSubmit","e","preventDefault","data","variables","input","localStorage","setItem","token","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/KEITH/ActualProject/social-media-frontend/src/components/Auth/Register.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { REGISTER_USER } from '../../services/auth';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Register() {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [register] = useMutation(REGISTER_USER);\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const { data } = await register({ \r\n        variables: { \r\n          input: formData\r\n        } \r\n      });\r\n      \r\n      localStorage.setItem('token', data.register.token);\r\n      navigate('/feed');\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      alert('Registration failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form\">\r\n      <h2>Register</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={formData.username}\r\n          onChange={(e) => setFormData({...formData, username: e.target.value})}\r\n          placeholder=\"Username\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          value={formData.email}\r\n          onChange={(e) => setFormData({...formData, email: e.target.value})}\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={formData.password}\r\n          onChange={(e) => setFormData({...formData, password: e.target.value})}\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,aAAa,QAAQ,qBAAqB;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACvCU,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF,MAAM,CAACC,QAAQ,CAAC,GAAGZ,WAAW,CAACC,aAAa,CAAC;EAC7C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAML,QAAQ,CAAC;QAC9BM,SAAS,EAAE;UACTC,KAAK,EAAEZ;QACT;MACF,CAAC,CAAC;MAEFa,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACL,QAAQ,CAACU,KAAK,CAAC;MAClDT,QAAQ,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CE,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvB,OAAA;MAAAuB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB3B,OAAA;MAAM4B,QAAQ,EAAElB,YAAa;MAAAa,QAAA,gBAC3BvB,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE3B,QAAQ,CAACE,QAAS;QACzB0B,QAAQ,EAAGpB,CAAC,IAAKP,WAAW,CAAC;UAAC,GAAGD,QAAQ;UAAEE,QAAQ,EAAEM,CAAC,CAACqB,MAAM,CAACF;QAAK,CAAC,CAAE;QACtEG,WAAW,EAAC,UAAU;QACtBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3B,OAAA;QACE6B,IAAI,EAAC,OAAO;QACZC,KAAK,EAAE3B,QAAQ,CAACG,KAAM;QACtByB,QAAQ,EAAGpB,CAAC,IAAKP,WAAW,CAAC;UAAC,GAAGD,QAAQ;UAAEG,KAAK,EAAEK,CAAC,CAACqB,MAAM,CAACF;QAAK,CAAC,CAAE;QACnEG,WAAW,EAAC,OAAO;QACnBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3B,OAAA;QACE6B,IAAI,EAAC,UAAU;QACfC,KAAK,EAAE3B,QAAQ,CAACI,QAAS;QACzBwB,QAAQ,EAAGpB,CAAC,IAAKP,WAAW,CAAC;UAAC,GAAGD,QAAQ;UAAEI,QAAQ,EAAEI,CAAC,CAACqB,MAAM,CAACF;QAAK,CAAC,CAAE;QACtEG,WAAW,EAAC,UAAU;QACtBC,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACF3B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACzB,EAAA,CAvDuBD,QAAQ;EAAA,QAMXL,WAAW,EACbE,WAAW;AAAA;AAAAqC,EAAA,GAPNlC,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}